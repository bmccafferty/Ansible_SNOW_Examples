---
- name: Patching Check a Change before starting
  hosts: all
  gather_facts: false
  tasks:
    - name: Include vars
      ansible.builtin.include_vars: ../vars/snow.yml

    - name: Start the patching process and move the change onto the next stage
      block:
        - name: Move the change to impliment
          servicenow.itsm.change_request:
            instance:
              host: "{{ snow_host }}"
              username: "{{ snow_user }}"
              password: "{{ snow_pass }}"
            state: implement
            number: "{{ snow_chg_no }}"

        - name: Patch the server
          ansible.builtin.yum:
            name: '*'
            state: latest
            update_only: true

        - name: Reboot the server post patching
          ansible.builtin.reboot:
            reboot_timeout: 3600

        - name: Move the change to review
          servicenow.itsm.change_request:
            instance:
              host: "{{ snow_host }}"
              username: "{{ snow_user }}"
              password: "{{ snow_pass }}"

            state: review
            number: "{{ snow_chg_no }}"

        - name: Patching Complete Close the Change
          servicenow.itsm.change_request:
            instance:
              host: "{{ snow_host }}"
              username: "{{ snow_user }}"
              password: "{{ snow_pass }}"

            state: closed
            close_code: "successful"
            close_notes: "Closed Automaticly By Ansible As Successful."
            number: "{{ snow_chg_no }}"

        - name: Display a nice message
          ansible.builtin.debug:
            msg: "Change - {{ snow_chg_no }} has been completed sucessfully and closed"

      rescue:
        - name: Create INC
          servicenow.itsm.incident:
            instance:
              host: "{{ snow_host }}"
              username: "{{ snow_user }}"
              password: "{{ snow_pass }}"
            state: new
            caller: admin
            short_description: "Automated Ansible Patching Has Failed - {{ snow_chg_no }} on {{ inventory_hostname }}"
            description: "Automated Ansible Patching Has Failed - {{ snow_chg_no }}. The imacted host is {{ inventory_hostname }}. The Error detected was {{ ansible_failed_result }}. Please check the details of the change record and the ansible run for more details"
            impact: low
            urgency: low
            other:
              cmdb_ci: "{{ inventory_hostname }}"
          register: inc_number

        - name: Move the change to review
          servicenow.itsm.change_request:
            instance:
              host: "{{ snow_host }}"
              username: "{{ snow_user }}"
              password: "{{ snow_pass }}"

            state: review
            number: "{{ snow_chg_no }}"

        - name: Patching Failed Close Change as Failed
          servicenow.itsm.change_request:
            instance:
              host: "{{ snow_host }}"
              username: "{{ snow_user }}"
              password: "{{ snow_pass }}"

            state: closed
            close_code: "unsuccessful"
            close_notes: "Closed Automaticly By Ansible As Unsuccessful.  An INC Has been raised for this failure {{ inc_number.record.number }}"
            number: "{{ snow_chg_no }}"

        - name: Display a nice message
          ansible.builtin.debug:
            msg: "Change - {{ snow_chg_no }} has failed, a ticket has been raised {{ inc_number.record.number }} and the change has been closed as Unsuccessful"
